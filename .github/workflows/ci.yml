name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]

# Cancel older runs of the same PR/branch to save minutes
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build & test (${{ matrix.os }} | .NET ${{ matrix.dotnet }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]        # add windows-latest if you want
        dotnet: ["9.0.x", "8.0.x"] # tests use .NET 8 reference assemblies; keep both SDKs handy

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore

      - name: Build (Release, no restore)
        run: dotnet build --configuration Release --no-restore

      - name: Test with coverage
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx" --results-directory ./TestResults

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.dotnet }}
          path: |
            TestResults/**/*.trx
            TestResults/**/coverage.cobertura.xml
